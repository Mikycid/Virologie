from fastapi import APIRouter, Depends, Request
from api.service.exploitService import ExploitService
from pydantic import BaseModel

router = APIRouter()

def get_exploit_service(request: Request) -> ExploitService:
    data_manager = request.app.state.app_state.data_manager
    return ExploitService(data_manager.exploit_module, data_manager.user_repository)

@router.post("/api/modules/exploit/send_peas")
async def send_peas(id: str, exploit_service: ExploitService = Depends(get_exploit_service)):
    return await exploit_service.send_peas(id)

@router.post("/api/modules/exploit/receive_peas")
async def receive_peas(id: str, message: str, exploit_service: ExploitService = Depends(get_exploit_service)):
    return await exploit_service.receive_peas(message, id)

class ExecShellcodeRequest(BaseModel):
    id: str
    shellcode_x86: str
    shellcode_x64: str
    method: str = "self-exec"
    prefered_process: str = "scvhost.exe"

@router.post("/api/modules/exploit/exec_shellcode")
async def exec_shellcode(
    request: ExecShellcodeRequest,
    exploit_service: ExploitService = Depends(get_exploit_service)
):
    return await exploit_service.exec_shellcode(
        request.id,
        request.shellcode_x86,
        request.shellcode_x64,
        request.method,
        request.prefered_process
    )